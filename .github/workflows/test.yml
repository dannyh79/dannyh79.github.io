name: test

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/*.mdx?'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '**/*.mdx?'

env:
  CI: true
  NODE_VERSION: 21.x
  E2E_DEVICES: '["chrome"]'

jobs:
  # non-E2E tests
  vitest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-pnpm-env

      - run: pnpm vitest --run --passWithNoTests

  e2e:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-pnpm-env

      - name: Extract Playwright Version
        id: extract-playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm list -p @playwright/test | grep @playwright | sed 's/.*@//')
          echo "playwright_version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache Playwright Browsers
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ steps.extract-playwright-version.outputs.playwright_version }}-${{ join(fromJson(env.E2E_DEVICES), '-') }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        # flag `--only-shell` ref: https://github.com/microsoft/playwright/issues/33566
        run: pnpm playwright install --only-shell --with-deps ${{ join(fromJson(env.E2E_DEVICES), ' ') }}

      - run: pnpm exec playwright test
